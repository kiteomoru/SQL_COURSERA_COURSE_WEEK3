Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

Okiemute Omoru

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =10000
ii. Business table =10000
iii. Category table =10000
iv. Checkin table =10000
v. elite_years table =10000
vi. friend table = 10000
vii. hours table =10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table =10000



select count(*) as 
total
from Business;

+-------+
| total |
+-------+
| 10000 |
+-------+

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

1.	Business = 10,000
2.	Hours = 1562
3.	Category = 2643
4.	Attribute = 1115
5.	Review = 10,000
6.	Checkin = 493
7.	Photo = 10,000
8.	Tip = 537
9.	User = 10,000
10.	Friend = 11
11.	Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.

select count(distinct business_id)                       
as 
total_distinct_records
from category;

+------------------------+
| total_distinct_records |
+------------------------+
|                   2643 |
+------------------------+

select  count(distinct business_id) 
as 
total_records_attr
from attribute;

+--------------------+
| total_records_attr |
+--------------------+
|               1115 |
+--------------------+

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

Answer: no

SQL code used to arrive at answer:
  select 
  id, name, review_count, yelping_since, useful, funny, cool, fans, average_stars
, compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos
from user
where id = NULL or name = NULL or review_count = NULL or yelping_since = NULL or useful = NULL or funny = NULL or cool = NULL or fans= NULL or average_stars= NULL or compliment_hot= NULL or compliment_more= NULL or compliment_profile= NULL or compliment_cute= NULL or compliment_list= NULL or compliment_note= NULL or compliment_plain = NULL or compliment_cool= NULL or compliment_funny= NULL or compliment_writer= NULL or compliment_photos= NULL;

  +----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
| id | name | review_count | yelping_since | useful | funny | cool | fans | average_stars | compliment_hot | compliment_more | compliment_profile | compliment_cute | compliment_list | compliment_note | compliment_plain | compliment_cool | compliment_funny | compliment_writer | compliment_photos |
+----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
+----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
(Zero rows)
  
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:  1 		max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:  1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		
  
 code:
 select min(stars), max(stars), avg(stars)
from review ;

+------------+------------+------------+
| min(stars) | max(stars) | avg(stars) |
+------------+------------+------------+
|          1 |          5 |     3.7082 |
+------------+------------+------------+
  
  
  
5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
  
	select city, count(review_count) as review_count_total
from business
group by city
order by  review_count_total desc;

	Copy and Paste the Result Below:
  +-----------------+--------------------+
| city            | review_count_total |
+-----------------+--------------------+
| Las Vegas       |               1561 |
| Phoenix         |               1001 |
| Toronto         |                985 |
| Scottsdale      |                497 |
| Charlotte       |                468 |
| Pittsburgh      |                353 |
| Montréal        |                337 |
| Mesa            |                304 |
| Henderson       |                274 |
| Tempe           |                261 |
| Edinburgh       |                239 |
| Chandler        |                232 |
| Cleveland       |                189 |
| Gilbert         |                188 |
| Glendale        |                188 |
| Madison         |                176 |
| Mississauga     |                150 |
| Stuttgart       |                141 |
| Peoria          |                105 |
| Markham         |                 80 |
| Champaign       |                 71 |
| North Las Vegas |                 70 |
| North York      |                 64 |
| Surprise        |                 60 |
| Richmond Hill   |                 54 |
+-----------------+--------------------+
(Output limit exceeded, 25 of 362 total rows shown)

6. Find the distribution of star ratings to the business in the following cities:

i. Avon

select name
, stars
, review_count
from business
where city = 'Avon'
order by review_count desc;
+-----------------------------------------------+-------+--------------+
| name                                          | stars | review_count |
+-----------------------------------------------+-------+--------------+
| Mulligans Pub and Grill                       |   3.5 |           50 |
| Winking Lizard Tavern                         |   3.5 |           31 |
| Dervish Mediterranean & Turkish Grill         |   4.5 |           31 |
| Cambria hotel & suites Avon - Cleveland       |   4.0 |           17 |
| Portrait Innovations                          |   1.5 |           10 |
| Light Salon & Spa                             |   3.5 |            7 |
| Marc's                                        |   4.0 |            4 |
| Helen & Kal's                                 |   2.5 |            3 |
| Hoban Pest Control                            |   5.0 |            3 |
| Mr. Handyman of Cleveland's Northwest Suburbs |   2.5 |            3 |
+-----------------------------------------------+-------+--------------+

SQL code used to arrive at answer:

select stars as star_ratings
, review_count as counts
from business
where city = 'Avon'
order by counts desc;


Copy and Paste the Resulting Table Below (2 columns -  star rating and count):
+--------------+--------+
| star_ratings | counts |
+--------------+--------+
|          3.5 |     50 |
|          3.5 |     31 |
|          4.5 |     31 |
|          4.0 |     17 |
|          1.5 |     10 |
|          3.5 |      7 |
|          4.0 |      4 |
|          2.5 |      3 |
|          5.0 |      3 |
|          2.5 |      3 |
+--------------+--------+





ii. Beachwood

select name
, stars
, review_count
from business
where city = 'Beachwood'
order by review_count desc;

+---------------------------------+-------+--------------+
| name                            | stars | review_count |
+---------------------------------+-------+--------------+
| Hyde Park Prime Steakhouse      |   4.0 |           69 |
| Sixth & Pine                    |   4.5 |           14 |
| Maltz Museum of Jewish Heritage |   3.0 |            8 |
| College Planning Network        |   2.0 |            8 |
| Beechmont Country Club          |   5.0 |            6 |
| Shaker Women's Wellness         |   5.0 |            6 |
| Fyodor Bridal Atelier           |   5.0 |            4 |
| Studio Mz                       |   5.0 |            4 |
| Charley's Grilled Subs          |   3.0 |            3 |
| Origins                         |   4.5 |            3 |
| Lucky Brand Jeans               |   3.5 |            3 |
| American Eagle Outfitters       |   3.5 |            3 |
| Avis Rent A Car                 |   2.5 |            3 |
| Cleveland Acupuncture           |   5.0 |            3 |
+---------------------------------+-------+--------------+

SQL code used to arrive at answer:
select stars as star_ratings
, review_count as counts
from business
where city = 'Beachwood'
order by counts desc;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+--------------+--------+
| star_ratings | counts |
+--------------+--------+
|          4.0 |     69 |
|          4.5 |     14 |
|          3.0 |      8 |
|          2.0 |      8 |
|          5.0 |      6 |
|          5.0 |      6 |
|          5.0 |      4 |
|          5.0 |      4 |
|          3.0 |      3 |
|          4.5 |      3 |
|          3.5 |      3 |
|          3.5 |      3 |
|          2.5 |      3 |
|          5.0 |      3 |
+--------------+--------+		
    
    
7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
  
	select name, id, review_count 
from user
order by review_count desc
limit 3;
		
	Copy and Paste the Result Below:    
    
 +--------+------------------------+--------------+
| name   | id                     | review_count |
+--------+------------------------+--------------+
| Gerald | -G7Zkl1wIWBBmD0KRy_sCw |         2000 |
| Sara   | -3s52C4zL_DHRK0ULG6qtg |         1629 |
| Yuri   | -8lbUNlXVSoXqaRRiHiSNg |         1339 |
+--------+------------------------+--------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
  
  Answer: based on the findings from the table and code below, posing more reviews doesn't correlate with having more fans
  
  select name, id, review_count , fans
from user
order by fans desc;

+-----------+------------------------+--------------+------+
| name      | id                     | review_count | fans |
+-----------+------------------------+--------------+------+
| Amy       | -9I98YbNQnLdAmcYfb324Q |          609 |  503 |
| Mimi      | -8EnCioUmDygAbsYZmTeRQ |          968 |  497 |
| Harald    | --2vR0DIsmQ6WfcSzKWigw |         1153 |  311 |
| Gerald    | -G7Zkl1wIWBBmD0KRy_sCw |         2000 |  253 |
| Christine | -0IiMAZI2SsQ7VmyzJjokQ |          930 |  173 |
| Lisa      | -g3XIcCb2b-BD0QBCcq2Sw |          813 |  159 |
| Cat       | -9bbDysuiWeo2VShFJJtcw |          377 |  133 |
| William   | -FZBTkAZEXoP7CYvRV2ZwQ |         1215 |  126 |
| Fran      | -9da1xk7zgnnfO1uTVYGkA |          862 |  124 |
| Lissa     | -lh59ko3dxChBSZ9U7LfUw |          834 |  120 |
| Mark      | -B-QEUESGWHPE_889WJaeg |          861 |  115 |
| Tiffany   | -DmqnhW4Omr3YhmnigaqHg |          408 |  111 |
| bernice   | -cv9PPT7IHux7XUc9dOpkg |          255 |  105 |
| Roanna    | -DFCC64NXgqrxlO8aLU5rg |         1039 |  104 |
| Angela    | -IgKkE8JvYNWeGu8ze4P8Q |          694 |  101 |
| .Hon      | -K2Tcgh2EKX6e6HqqIrBIQ |         1246 |  101 |
| Ben       | -4viTt9UC44lWCFJwleMNQ |          307 |   96 |
| Linda     | -3i9bhfvrM3F1wsC9XIB8g |          584 |   89 |
| Christina | -kLVfaJytOJY2-QdQoCcNQ |          842 |   85 |
| Jessica   | -ePh4Prox7ZXnEBNGKyUEA |          220 |   84 |
| Greg      | -4BEUkLvHQntN6qPfKJP2w |          408 |   81 |
| Nieves    | -C-l8EHSLXtZZVfUAUhsPA |          178 |   80 |
| Sui       | -dw8f7FLaUmWR7bfJ_Yf0w |          754 |   78 |
| Yuri      | -8lbUNlXVSoXqaRRiHiSNg |         1339 |   76 |
| Nicole    | -0zEEaDFIjABtPQni0XlHA |          161 |   73 |
+-----------+------------------------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: yes

	
	SQL code used to arrive at answer:

select count (*)
from review
where text like '%love%';

+-----------+
| count (*) |
+-----------+
|      1780 |
+-----------+

select count (*)
from review
where text like '%hate%';

+-----------+
| count (*) |
+-----------+
|       232 |
+-----------+

  
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	select id, name, fans from user
order by fans desc
limit 10;

	Copy and Paste the Result Below:

+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
  SQL code used for analysis:
  
  select b.name , b.city , c.category , b.stars , h.hours
, b.review_count , b.postal_code
from (business b inner join category c on b.id = c.business_id) inner join hours h on h.business_id = c.business_id
where b.city = 'Phoenix' 
 group by b.stars
 order by b.stars desc;
 
+----------------------------------------+---------+-----------------+-------+----------------------+--------------+-------------+
| name                                   | city    | category        | stars | hours                | review_count | postal_code |
+----------------------------------------+---------+-----------------+-------+----------------------+--------------+-------------+
| Apache Wash Trailhead                  | Phoenix | Active Life     |   5.0 | Saturday|5:00-19:00  |            9 | 85085       |
| Charlie D's Catfish & Chicken          | Phoenix | Seafood         |   4.5 | Saturday|11:00-18:00 |            7 | 85034       |
| Bootleggers Modern American Smokehouse | Phoenix | Barbeque        |   4.0 | Saturday|11:00-22:00 |          431 | 85028       |
| AAA Phoenix Office                     | Phoenix | Hotels & Travel |   3.5 | Monday|8:30-17:30    |           80 | 85020       |
| Kb Home Studio                         | Phoenix | Home Services   |   3.0 | Saturday|10:00-18:00 |            5 | 85044       |
| McDonald's                             | Phoenix | Fast Food       |   2.0 | Saturday|5:00-0:00   |            8 | 85004       |
+----------------------------------------+---------+-----------------+-------+----------------------+--------------+-------------+
i. Do the two groups you chose to analyze have a different distribution of hours?

yes. The businesses that are open fro longer hours have higher star ratings

ii. Do the two groups you chose to analyze have a different number of reviews?

 yes        
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

yes. The businesses with closer locations (based on postal code) have similar ratings.

  
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
SQL code used for analysis:
  
  select b.name , b.is_open , c.category , b.stars , h.hours , b.review_count
, b.postal_code
from business b 
 inner join category c on b.id = c.business_id
 inner join hours h on h.business_id = c.business_id
where b.city = 'Phoenix' 
 group by b.is_open;
 
 +----------------------------------------+---------+----------+-------+----------------------+--------------+-------------+
| name                                   | is_open | category | stars | hours                | review_count | postal_code |
+----------------------------------------+---------+----------+-------+----------------------+--------------+-------------+
| Charlie D's Catfish & Chicken          |       0 | Seafood  |   4.5 | Saturday|11:00-18:00 |            7 | 85034       |
| Bootleggers Modern American Smokehouse |       1 | Barbeque |   4.0 | Saturday|11:00-22:00 |          431 | 85028       |
+----------------------------------------+---------+----------+-------+----------------------+--------------+-------------+

i. Difference 1:
       business that are still open have more reviews  
         
ii. Difference 2:
         
        in the case of the city Phoenix, the business that are closed have higher rating 
        
  
  
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
    
  Finding relationship between the star ratings and likes, using  the review and the tip tables.   
	
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
       I will use an inner join function to join the likes from the tip table with the stars from the review table. 
       
iii. Output of your finished dataset:
      +-------+-------+
| stars | likes |
+-------+-------+
|     3 |     2 |
|     5 |     2 |
|     5 |     1 |
|     5 |     1 |
|     5 |     1 |
|     5 |     1 |
|     5 |     1 |
|     5 |     1 |
|     5 |     1 |
|     5 |     1 |
|     3 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
|     4 |     1 |
+-------+-------+
(Output limit exceeded, 25 of 1227 total rows shown)   
         
iv. Provide the SQL code you used to create your final dataset: 
    
    select
  r.stars
, t.likes
from review  r
inner join tip t on r.user_id = t.user_id
order by t.likes desc;


    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
  
  


